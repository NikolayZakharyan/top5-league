{"version":3,"sources":["components/league/ThisWeek.jsx","components/league/TableLeague.jsx","components/league/League.jsx","components/Main_Tabs.jsx","App.js","index.js"],"names":["useRowStyles","createData","makeStyles","root","borderBottom","game","date","time","stadium","homeScore","awayScore","Date","toLocaleString","split","dateB","moment","dateC","liveTime","diff","console","log","carbs","history","customerId","amount","Row","props","row","React","useState","open","setOpen","classes","Fragment","TableRow","className","TableCell","IconButton","aria-label","size","onClick","component","scope","align","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","Table","TableHead","TableBody","map","historyRow","i","CollapsibleTable","gamesData","setGamesData","url","URL","useEffect","loadData","a","fetch","response","json","result","rows","events","strEvent","dateEvent","strTime","strVenue","intHomeScore","intAwayScore","TableContainer","Paper","games","GridExample","rowData","setRowData","table","width","height","id","modules","AllCommunityModules","defaultColDef","sortable","animateRows","sortingOrder","field","TabPanel","children","value","index","other","role","hidden","aria-labelledby","p","a11yProps","useStyles","theme","backgroundColor","palette","background","paper","FullWidthTabs","league_id","useTheme","setValue","AppBar","position","color","Tabs","onChange","event","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","flexGrow","display","weight","tabs","borderRight","divider","VerticalTabs","orientation","App","ReactDOM","render","document","getElementById"],"mappings":"4eA0BMA,GANJC,EAAW,kBAAmB,OAAQ,gBAAiB,WACvDA,EAAW,qBAAsB,IAAK,EAAK,GAAI,IAAK,MACpDA,EAAW,SAAU,IAAK,GAAM,GAAI,EAAK,MACzCA,EAAW,UAAW,IAAK,IAAK,GAAI,IAAK,KAGtBC,YAAW,CAC9BC,KAAM,CACJ,QAAS,CACPC,aAAc,aAKpB,SAASH,EAAWI,EAAMC,EAAMC,EAAMC,EAASC,EAAWC,GAAW,MAGpD,IAAIC,KAAKL,EAAO,IAAMC,EAAO,KAAKK,iBAAiBC,MAAM,KAHL,mBAGlEP,EAHkE,KAG5DC,EAH4D,KAOnE,IAAMO,EAAQC,MACRC,EAAQD,IAAOT,EAAOC,GAExBU,EAAWH,EAAMI,KAAKF,EAAO,WAUjC,OARGC,EAAW,KAAIA,GAAU,IAExBA,EAAW,GAAKA,EAAW,IAAIE,QAAQC,IAAIH,GAMxC,CACLZ,OACAC,OACAC,OACAc,MAAOb,EACPc,QAAS,CACP,CACEC,WAAYlB,EAAKQ,MAAM,MAAM,GAC7BW,OAAQf,GAAwB,oBAElC,CACEc,WAAYlB,EAAKQ,MAAM,MAAM,GAC7BW,OAAQd,GAAwB,sBAMxC,SAASe,EAAIC,GAAO,IAEVC,EAAQD,EAARC,IAFU,EAGMC,IAAMC,UAAS,GAHrB,mBAGXC,EAHW,KAGLC,EAHK,KAIZC,EAAUhC,IAEhB,OACE,eAAC,IAAMiC,SAAP,WACE,eAACC,EAAA,EAAD,CAAUC,UAAWH,EAAQ7B,KAA7B,UACE,cAACiC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,aACXC,KAAK,QACLC,QAAS,kBAAMT,GAASD,IAH1B,SAKGA,EAAO,cAAC,IAAD,IAA0B,cAAC,IAAD,QAGtC,cAACM,EAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,MAAhC,SACGf,EAAItB,OAEP,cAAC+B,EAAA,EAAD,CAAWO,MAAM,QAAjB,SAA0BhB,EAAIrB,OAC9B,cAAC8B,EAAA,EAAD,CAAWO,MAAM,QAAjB,SAA0BhB,EAAIpB,OAC9B,cAAC6B,EAAA,EAAD,CAAWO,MAAM,QAAjB,SAA0BhB,EAAIN,WAEhC,cAACa,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAWQ,MAAO,CAAEC,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,SACE,cAACC,EAAA,EAAD,CAAUC,GAAInB,EAAMoB,QAAQ,OAAOC,eAAa,EAAhD,SACE,eAACC,EAAA,EAAD,CAAKC,OAAQ,EAAb,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACf,UAAU,MAAhD,qBAGA,eAACgB,EAAA,EAAD,CAAOlB,KAAK,QAAQD,aAAW,YAA/B,UACE,cAACoB,EAAA,EAAD,UACE,eAACxB,EAAA,EAAD,WAEE,cAACE,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,CAAWO,MAAM,QAAjB,yBAGJ,cAACgB,EAAA,EAAD,UACGhC,EAAIL,QAAQsC,KAAI,SAACC,EAAYC,GAG5B,OACE,eAAC5B,EAAA,EAAD,WAIE,cAACE,EAAA,EAAD,UAAYyB,EAAWtC,aACvB,cAACa,EAAA,EAAD,CAAWO,MAAM,QAAjB,SAA0BkB,EAAWrC,WALxBsC,uBAwCtB,SAASC,EAAiBrC,GAAQ,IAAD,EACZG,mBAAS,IADG,mBACvCmC,EADuC,KAC5BC,EAD4B,OAExBpC,mBACpB,6CAA+CH,EAAMwC,KAHT,mBAEvCC,EAFuC,UAM9CC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAQ,uCAAG,gCAAAC,EAAA,sEACQC,MAAMJ,GADd,cACTK,EADS,gBAEMA,EAASC,OAFf,OAETC,EAFS,OAGTC,EAAOD,EAAOE,OAAOhB,KAAI,SAACE,GAC9B,OAAO7D,EACL6D,EAAEe,SACFf,EAAEgB,UACFhB,EAAEiB,QACFjB,EAAEkB,SACFlB,EAAEmB,aACFnB,EAAEoB,iBAGNjB,EAAaU,GAbE,2CAAH,qDAgBd,OACE,cAACQ,EAAA,EAAD,CAAgB1C,UAAW2C,IAA3B,SACE,eAAC3B,EAAA,EAAD,CAAOnB,aAAW,oBAAlB,UACE,cAACoB,EAAA,EAAD,UACE,eAACxB,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,CAAWO,MAAM,QAAjB,kBACA,cAACP,EAAA,EAAD,CAAWO,MAAM,QAAjB,kBACA,cAACP,EAAA,EAAD,CAAWO,MAAM,QAAjB,0BAIJ,cAACgB,EAAA,EAAD,UACGK,EAAUJ,KAAI,SAACjC,GAAD,OACb,cAACF,EAAD,CAAoBE,IAAKA,EAAK0D,MAAOrB,GAA3BrC,EAAItB,gB,mCC/LX,SAASiF,EAAY5D,GAClCP,QAAQC,IAAIM,GAD6B,MAEXG,mBAAS,MAFE,gCAGCA,mBAAS,OAHV,gCAIXA,mBAAS,OAJE,mBAIlC0D,EAJkC,KAIzBC,EAJyB,OAMnB3D,mBAAS,+DAAD,OACmCH,EAAMwC,IADzC,iBANW,mBAMlCC,EANkC,UAUzCC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAQ,uCAAG,8BAAAC,EAAA,sEACQC,MAAMJ,GADd,cACTK,EADS,gBAEMA,EAASC,OAFf,OAETC,EAFS,OAIfc,EAAWd,EAAOe,OAJH,2CAAH,qDAOd,OACE,qBAAK7C,MAAO,CAAE8C,MAAO,OAAQC,OAAQ,QAArC,SACE,qBACEC,GAAG,SACHhD,MAAO,CACL+C,OAAQ,SACRD,MAAO,UAETvD,UAAU,kBANZ,SAQE,eAAC,cAAD,CACE0D,QAASC,IACTC,cAAe,CACbL,MAAO,IACPM,UAAU,GAEZT,QAASA,EACTU,aAAa,EACbC,aAAc,CAAC,OAAQ,MAAO,MARhC,UAWE,cAAC,eAAD,CACEC,MAAM,OACNT,MAAO,IACPQ,aAAc,CAAC,OAAQ,SAEzB,cAAC,eAAD,CACEC,MAAM,QACNT,MAAO,IACPQ,aAAc,CAAC,OAAQ,SAEzB,cAAC,eAAD,CACEC,MAAM,SACNT,MAAO,IACPQ,aAAc,CAAC,OAAQ,SAEzB,cAAC,eAAD,CACEC,MAAM,MACNT,MAAO,IACPQ,aAAc,CAAC,OAAQ,SAEzB,cAAC,eAAD,CAAcC,MAAM,OAAOT,MAAO,MAClC,cAAC,eAAD,CAAcS,MAAM,OAAOT,MAAO,MAClC,cAAC,eAAD,CACES,MAAM,WACNT,MAAO,IACPQ,aAAc,CAAC,OAAQ,SAEzB,cAAC,eAAD,CACEC,MAAM,eACNT,MAAO,IACPQ,aAAc,CAAC,OAAQ,gBClEnC,SAASE,EAAS1E,GAAQ,IAChB2E,EAAqC3E,EAArC2E,SAAUC,EAA2B5E,EAA3B4E,MAAOC,EAAoB7E,EAApB6E,MAAUC,EADZ,YACsB9E,EADtB,8BAGvB,OACE,6CACE+E,KAAK,WACLC,OAAQJ,IAAUC,EAClBX,GAAE,8BAAyBW,GAC3BI,kBAAA,yBAAmCJ,IAC/BC,GALN,aAOGF,IAAUC,GACT,cAACnD,EAAA,EAAD,CAAKwD,EAAG,EAAR,SACE,cAACtD,EAAA,EAAD,CAAYb,UAAW,OAAvB,SAAgC4D,SAa1C,SAASQ,EAAUN,GACjB,MAAO,CACLX,GAAG,kBAAD,OAAoBW,GACtB,gBAAgB,uBAAhB,OAAwCA,IAI5C,IAAMO,EAAY5G,aAAW,SAAC6G,GAAD,MAAY,CACvC5G,KAAM,CACJ6G,gBAAiBD,EAAME,QAAQC,WAAWC,MAC1CzB,MAAO,SAII,SAAS0B,EAAT,GAAuC,IAAdC,EAAa,EAAbA,UAGhCrF,EAAU8E,IACVC,EAAQO,cAJqC,EAKzB1F,IAAMC,SAAS,GALU,mBAK5CyE,EAL4C,KAKrCiB,EALqC,KAenD,OACE,sBAAKpF,UAAWH,EAAQ7B,KAAxB,UACE,cAACqH,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAhC,SACE,eAACC,EAAA,EAAD,CACErB,MAAOA,EACPsB,SAba,SAACC,EAAOC,GAC3BP,EAASO,IAaHC,eAAe,UACfC,UAAU,UACVzE,QAAQ,YACRjB,aAAW,0BANb,UAQE,cAAC2F,EAAA,EAAD,aAAKC,MAAM,aAAgBrB,EAAU,KACrC,cAACoB,EAAA,EAAD,aAAKC,MAAM,aAAgBrB,EAAU,KACrC,cAACoB,EAAA,EAAD,aAAKC,MAAM,SAAYrB,EAAU,UAGrC,eAAC,IAAD,CACEsB,KAA0B,QAApBpB,EAAMqB,UAAsB,YAAc,IAChD7B,MAAOD,EACP+B,cAvBoB,SAAC9B,GACzBgB,EAAShB,IAmBP,UAKE,cAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,EAAG+B,IAAKvB,EAAMqB,UAA7C,SACE,cAAC,EAAD,CAAUlE,IAAK,2BAA6BmD,MAE9C,cAACjB,EAAD,CAAUE,MAAOA,EAAOC,MAAO,EAAG+B,IAAKvB,EAAMqB,UAA7C,SACE,cAAC,EAAD,CAAUlE,IAAK,2BAA6BmD,MAE9C,cAACjB,EAAD,CAAUE,MAAOA,EAAOC,MAAO,EAAG+B,IAAKvB,EAAMqB,UAA7C,SACE,cAAC,EAAD,CAAalE,IAAKmD,YCtF5B,SAASjB,EAAS1E,GAAQ,IAChB2E,EAAqC3E,EAArC2E,SAAUC,EAA2B5E,EAA3B4E,MAAOC,EAAoB7E,EAApB6E,MAAUC,EADZ,YACsB9E,EADtB,8BAGvB,OACE,6CACE+E,KAAK,WACLC,OAAQJ,IAAUC,EAClBX,GAAE,4BAAuBW,GACzBI,kBAAA,uBAAiCJ,IAC7BC,GALN,aAOGF,IAAUC,GACT,cAACnD,EAAA,EAAD,CAAKwD,EAAG,EAAR,SACE,cAACtD,EAAA,EAAD,CAAYb,UAAW,OAAvB,SAAgC4D,SAa1C,SAASQ,EAAUN,GACjB,MAAO,CACLX,GAAG,gBAAD,OAAkBW,GACpB,gBAAgB,qBAAhB,OAAsCA,IAI1C,IAAMO,EAAY5G,aAAW,SAAC6G,GAAD,MAAY,CACvC5G,KAAM,CACJoI,SAAU,EACVvB,gBAAiBD,EAAME,QAAQC,WAAWC,MAC1CqB,QAAS,OACT7C,OAAQ,OACR8C,OAAQ,SAEVC,KAAM,CACJC,YAAY,aAAD,OAAe5B,EAAME,QAAQ2B,cAI7B,SAASC,IACtB,IAAM7G,EAAU8E,IADqB,EAEXlF,IAAMC,SAAS,GAFJ,mBAE9ByE,EAF8B,KAEvBiB,EAFuB,KAQrC,OACE,sBAAKpF,UAAS,UAAKH,EAAQ7B,KAAb,aAAd,UACE,eAACwH,EAAA,EAAD,CACEmB,YAAY,WACZvF,QAAQ,aACR+C,MAAOA,EACPsB,SAVe,SAACC,EAAOC,GAC3BP,EAASO,IAULxF,aAAW,wBACXH,UAAWH,EAAQ0G,KANrB,UAQE,cAACT,EAAA,EAAD,aAAKC,MAAM,WAAcrB,EAAU,KACnC,cAACoB,EAAA,EAAD,aAAKC,MAAM,kBAAqBrB,EAAU,KAC1C,cAACoB,EAAA,EAAD,aAAKC,MAAM,WAAcrB,EAAU,KACnC,cAACoB,EAAA,EAAD,aAAKC,MAAM,cAAiBrB,EAAU,KACtC,cAACoB,EAAA,EAAD,aAAKC,MAAM,WAAcrB,EAAU,QAIrC,cAAC,EAAD,CAAUP,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,CAAQc,UAAW,WAErB,cAAC,EAAD,CAAUf,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,CAAQc,UAAW,WAErB,cAAC,EAAD,CAAUf,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,CAAQc,UAAW,WAErB,cAAC,EAAD,CAAUf,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,CAAQc,UAAW,WACT,IACZ,cAAC,EAAD,CAAUf,MAAOA,EAAOC,MAAO,EAA/B,SACE,cAAC,EAAD,CAAQc,UAAW,cClFZ0B,MAVf,WACE,OACE,qBAAK5G,UAAU,MAAf,SAGE,cAAC,EAAD,OCHN6G,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0cc83e0a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport moment from 'moment';\nimport { FormatClearSharp } from '@material-ui/icons';\n\nconst rows = [\n  createData(`TEAT A - TEAM B`, 'date', 'starting time', 'stadium'),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n];\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction createData(game, date, time, stadium, homeScore, awayScore) {\n  // const dateTimeAgo = moment(\"2020-04-04 11:45:26.123\").fromNow('minutes')\n\n  [date, time] = new Date(date + ' ' + time + 'Z').toLocaleString().split(',');\n\n  // console.log([date, time]);\n\n  const dateB = moment();\n  const dateC = moment(date + time);\n\n  let liveTime = dateB.diff(dateC, 'minutes');\n\n  if(liveTime > 45) liveTime-=15\n\n  if (liveTime > 1 && liveTime < 91) console.log(liveTime);\n\n  // console.log('Difference is ', dateB.diff(dateC,'minutes'), 'minutes');\n\n  // console.log(time);\n\n  return {\n    game,\n    date,\n    time,\n    carbs: stadium,\n    history: [\n      {\n        customerId: game.split('vs')[0],\n        amount: homeScore ? homeScore : 'match dont start',\n      },\n      {\n        customerId: game.split('vs')[1],\n        amount: awayScore ? awayScore : 'match dont start',\n      },\n    ],\n  };\n}\n\nfunction Row(props) {\n  //   console.log(props.games);\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.game}\n        </TableCell>\n        <TableCell align=\"right\">{row.date}</TableCell>\n        <TableCell align=\"right\">{row.time}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                History\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    {/* <TableCell>Date</TableCell> */}\n                    <TableCell>Customer</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow, i) => {\n                    // console.log(historyRow);\n\n                    return (\n                      <TableRow key={i}>\n                        {/* <TableCell component=\"th\" scope=\"row\">\n                          {historyRow.date}\n                        </TableCell> */}\n                        <TableCell>{historyRow.customerId}</TableCell>\n                        <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                        {/* <TableCell align=\"right\">\n                          {Math.round(historyRow.amount * row.price * 100) /\n                            100}\n                        </TableCell> */}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    // date: PropTypes.number.isRequired,\n    // carbs: PropTypes.number.isRequired,\n    // time: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    game: PropTypes.string.isRequired,\n    // protein: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default function CollapsibleTable(props) {\n  const [gamesData, setGamesData] = useState([]);\n  const [URL, setURL] = useState(\n    'https://www.thesportsdb.com/api/v1/json/1/' + props.url\n  );\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const response = await fetch(URL);\n    const result = await response.json();\n    const rows = result.events.map((i) => {\n      return createData(\n        i.strEvent,\n        i.dateEvent,\n        i.strTime,\n        i.strVenue,\n        i.intHomeScore,\n        i.intAwayScore\n      );\n    });\n    setGamesData(rows);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>GAMES</TableCell>\n            <TableCell align=\"right\">DATE</TableCell>\n            <TableCell align=\"right\">TIME</TableCell>\n            <TableCell align=\"right\">Stadium</TableCell>\n            {/* <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {gamesData.map((row) => (\n            <Row key={row.game} row={row} games={gamesData} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport { AgGridReact, AgGridColumn } from '@ag-grid-community/react';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-alpine.css';\n\nexport default function GridExample(props) {\n  console.log(props);\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [rowData, setRowData] = useState(null);\n\n  const [URL, setURL] = useState(\n    `https://www.thesportsdb.com/api/v1/json/1/lookuptable.php?l=${props.url}&s=2020-2021`\n  );\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const response = await fetch(URL);\n    const result = await response.json();\n\n    setRowData(result.table);\n  };\n\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <div\n        id=\"myGrid\"\n        style={{\n          height: '1000px',\n          width: '1000px',\n        }}\n        className=\"ag-theme-alpine\"\n      >\n        <AgGridReact\n          modules={AllCommunityModules}\n          defaultColDef={{\n            width: 125,\n            sortable: true,\n          }}\n          rowData={rowData}\n          animateRows={true}\n          sortingOrder={['desc', 'asc', null]}\n          //   onGridReady={onGridReady}\n        >\n          <AgGridColumn\n            field=\"name\"\n            width={220}\n            sortingOrder={['desc', 'asc']}\n          />\n          <AgGridColumn\n            field=\"total\"\n            width={100}\n            sortingOrder={['desc', 'asc']}\n          />\n          <AgGridColumn\n            field=\"played\"\n            width={100}\n            sortingOrder={['desc', 'asc']}\n          />\n          <AgGridColumn\n            field=\"win\"\n            width={100}\n            sortingOrder={['desc', 'asc']}\n          />\n          <AgGridColumn field=\"loss\" width={100} />\n          <AgGridColumn field=\"draw\" width={100} />\n          <AgGridColumn\n            field=\"goalsfor\"\n            width={120}\n            sortingOrder={['desc', 'asc']}\n          />\n          <AgGridColumn\n            field=\"goalsagainst\"\n            width={120}\n            sortingOrder={['desc', 'asc']}\n          />\n          {/* <AgGridColumn field=\"bronze\" />\n          <AgGridColumn field=\"total\" /> */}\n        </AgGridReact>\n      </div>\n    </div>\n  );\n}\n// \"name\": \"Inter\",\n// \"teamid\": \"133681\",\n// \"played\": 18,\n// \"goalsfor\": 54,\n// \"goalsagainst\": 33,\n// \"goalsdifference\": 21,\n// \"win\": 12,\n// \"draw\": 4,\n// \"loss\": 2,\n// \"total\": 40\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n// -------------------------\nimport ThisWeek from './ThisWeek';\nimport TableLeague from './TableLeague';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={'span'}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 1000,\n  },\n}));\n\nexport default function FullWidthTabs({ league_id }) {\n  // console.log(league_id);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"THIS WEEK\" {...a11yProps(0)} />\n          <Tab label=\"PREV WEEK\" {...a11yProps(1)} />\n          <Tab label=\"TABLE\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <ThisWeek url={'eventsnextleague.php?id=' + league_id} />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <ThisWeek url={'eventspastleague.php?id=' + league_id} />\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <TableLeague url={league_id} />\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n\n// eventspastleague\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n// ------------------------------\nimport League from './league/League';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography component={'span'}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n    weight: '400px',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport default function VerticalTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={`${classes.root} main_tab`}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"SERIA A\" {...a11yProps(0)} />\n        <Tab label=\"Premier League\" {...a11yProps(1)} />\n        <Tab label=\"La Liga\" {...a11yProps(2)} />\n        <Tab label=\"Bundesliga\" {...a11yProps(3)} />\n        <Tab label=\"Ligue 1\" {...a11yProps(4)} />\n        {/* <Tab label=\"Item Six\" {...a11yProps(5)} />\n        <Tab label=\"Item Seven\" {...a11yProps(6)} /> */}\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <League league_id={'4332'} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <League league_id={'4328'} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <League league_id={'4335'} />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <League league_id={'4331'} />\n      </TabPanel>{' '}\n      <TabPanel value={value} index={4}>\n        <League league_id={'4334'} />\n      </TabPanel>\n{/* \n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Five\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        Item Six\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel> */}\n    </div>\n  );\n}\n","import './App.css';\nimport Main_Tabs from './components/Main_Tabs.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <div className='data-info'></div> */}\n       \n      <Main_Tabs />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}